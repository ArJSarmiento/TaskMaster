# GraphQL schema example
#
# https://gqlgen.com/getting-started/

type User {
  _id: ID!
  username: String!
  email: String!
  password: String!
  phone: String
  contactInformation: String
  profilePicture: String
  taskPreferences: [String]
  verificationStatus: Boolean
  tasks: [Task]
}

input SignInRequest{
  username: String!
  password: String!
}

type SignInResponse{
  access_token: String
  expires_in: String
  id_token: String
  refresh_token: String
  token_type: String
}

type Task {
  _id: ID!
  owner: User!
  ownerId: ID
  description: String!
  category: String
  taskRequirements: String
  location: String
  budget: Float
  specificSkillsRequired: [String]
  urgency: String
  priority: String
  status: String
}

input CreateUserInput {
  username: String!
  email: String!
  phone: String!
  password: String!
  sub: String
}

input UpdateUserInput {
  username: String
  email: String
  password: String
}

input CreateTaskInput {
  ownerId: ID!
  description: String!
  category: String
  taskRequirements: String
  location: String
  budget: Float
  specificSkillsRequired: [String]
  urgency: String
  priority: String
  status: String
}

input UpdateTaskInput {
  description: String
  category: String
  taskRequirements: String
  location: String
  budget: Float
  specificSkillsRequired: [String]
  urgency: String
  priority: String
  status: String
}

type DeleteTaskResponse {
  deletedTaskId: String!
}

type DeleteUserResponse {
  deletedUserId: String!
}

type Query {
  users: [User!]!
  user(id: ID!): User!
  tasks: [Task!]!
  task(id: ID!): Task!
}

type Mutation {
  createUser(input: CreateUserInput!): User!
  updateUser(id: ID!, input: UpdateUserInput!): User!
  deleteUser(input: ID!): DeleteUserResponse!
  
  createTask(input: CreateTaskInput!): Task!
  updateTask(id: ID!, input: UpdateTaskInput!): Task!
  deleteTask(id: ID!): DeleteTaskResponse!

  signIn(input: SignInRequest!): SignInResponse!
}
